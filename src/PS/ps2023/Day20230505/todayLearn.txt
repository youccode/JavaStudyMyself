What I learned today

1. Java에서 배열을 복사하는 방법

    - 먼저, 배열을 복사하는 방법으로는 Shallow Copy 와 Deep Copy가 존재함
    - Shallow Copy : A 배열이 지닌 메모리 주소값을 B 배열에 복사
                     하나의 값이 변경되면 동시에 다른 배열의 값도 변화

    - Deep Copy : A 배열이 지닌 실제 값을 복사하여 새로운 메모리 공간에 B 배열을 생성
                  A 배열의 값이 변하는 것과 B 배열의 값이 변하는 것은 무관함.

    - 배열 복사 method
        - int[] a = { 1, 2, 3, 4 };
          int[] b = a;
          => Shallow Copy를 진행하는 방법.

        - arr.clone() 함수를 이용하여 Deep Copy 가능

        - Arrays Class를 이용하여 배열 복사 메소드들을 사용 가능함.

            - Arrays.copyOf(복사할 배열, 길이) : 시작점 ~ 길이까지의 배열을 복사함.

            - Arrays.copyOfRange(복사 배열, begin, end) : 시작 지점 ~ 끝 지점까지 배열 복사
                - 시작점은 inclusive 끝 지점은 exclusive 주의

            - System.arraycopy(src, srcPos, dest, destPos, length);

              src - 원본 배열
              srcPos - 원본 배열의 복사 시작 위치
              dest - 복사할 배열
              destPost - 복사할 배열의 복사 시작 위치
              length - 복사할 요소의 개수

2. Java Scanner를 이용하지 않고 입력 받는 방법

    - bufferedReader를 이용
        - buffer의 사이즈가 8192byte(8KB)로 Scanner보다 8배 많음. 입출력 효율 높음
        - Data를 parsing 하지 않고 모두 String으로 넘어옴.
        - I/O Exception을 던짐. throw 하거나 try/catch를 해야함.

    - System.in.read()를 사용하는 방법
        - 동일하게 I/O Exception 처리를 해주어야 함.
        - 동시에 아스키코드만큼의 data를 받을 수 있음. int 형으로 data를 입력받음.

3. String의 값을 비교하는 경우

    - String의 value를 비교하는 경우, String.equals(str) Call by Value의 형태로 비교
    - String str == String str2 => Call by Reference의 형태로 메모리 주소값이 같은지 비교